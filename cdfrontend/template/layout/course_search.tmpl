{{ define "layout/course_search" }}

{{ template "base/header" . }}

<h2 style="margin-left:7.5px">Search</h2>

<form onsubmit="doSearch();return false">
<!-- Main search box -->
<div class="container" style="margin-top: 25px;">
	<div class="row justify-content-center">
		<div class="input-group">
			<div class="col-8">
				<input class="form-control" placeholder="Search by Course ID, Professor, or Keyword" id="searchbox" value="{{ .CurrentQuery }}">
			</div>
			<button class="btn btn-success btn-md" style="margin-left:5px" type="submit">Search</button>
		</div>
	</div>
</div>

<!-- Advanced search section -->
<div style="display:none;" id="advance-element">
	<ul class="nav nav-pills" style="margin-top: 10px;">
		<li class="nav-item btn-group" style="margin-top:8px; margin-left:10px;" id="level-list">
			<button class="btn btn-primary active level-item" onclick="toggle('level-undergraduate')" type="button" id="level-undergraduate">Undergraduate</button>
			<button class="btn btn-primary active level-item" onclick="toggle('level-graduate')" type="button" id="level-graduate">Graduate</button>
		</li>

		<li class="nav-item dropdown" style="margin-top:8px; margin-left:10px;">
			<button class="btn btn-primary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="true">Department</button>
			<ul class="dropdown-menu" id="dept-list">
				<li><a class="dropdown-item active dept-item" href="javascript:void(0)" id="dept-stat" onclick="toggle('dept-stat')">Statistics &amp; Data Science</a></li>
				<li><a class="dropdown-item active dept-item" href="javascript:void(0)" id="dept-cs" onclick="toggle('dept-cs')">Computer Science</a></li>
				<li><a class="dropdown-item active dept-item" href="javascript:void(0)" id="dept-ece" onclick="toggle('dept-ece')">Electrical &amp; Computer Engineering</a></li>
				<li><a class="dropdown-item active dept-item" href="javascript:void(0)" id="dept-bio" onclick="toggle('dept-bio')">Biology</a></li>
				<li><a class="dropdown-item active dept-item" href="javascript:void(0)" id="dept-math" onclick="toggle('dept-math')">Mathematics</a></li>
				<li><a class="dropdown-item active dept-item" href="javascript:void(0)" id="dept-phi" onclick="toggle('dept-phi')">Philosophy</a></li>
				<li><a class="dropdown-item active dept-item" href="javascript:void(0)" id="dept-econ" onclick="toggle('dept-econ')">Economics</a></li>
				<div class="dropdown-divider"></div>
				<li><a class="dropdown-item" href="javascript:void(0)" id="reset-dept" onclick="searchOptReset('dept-item')">Clear All</a></li>
				<li><a class="dropdown-item" href="javascript:void(0)" id="preset-dept" onclick="searchOptPreset('dept-item')">Select All</a></li>
			</ul>
		</li>

		<li class="nav-item dropdown" style="margin-top:8px; margin-left:10px;">
			<button class="btn btn-primary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">Unit</button>
			<ul class="dropdown-menu" id="units-list">
				<li><a class="dropdown-item active units-item" href="javascript:void(0)" id="units-3" onclick="toggle('units-3')">0-3</a></li>
				<li><a class="dropdown-item active units-item" href="javascript:void(0)" id="units-8" onclick="toggle('units-8')">4-8</a></li>
				<li><a class="dropdown-item active units-item" href="javascript:void(0)" id="units-12" onclick="toggle('units-12')">9-12</a></li>
				<li><a class="dropdown-item active units-item" href="javascript:void(0)" id="units-+" onclick="toggle('units-+')">12+</a></li>
				<div class="dropdown-divider"></div>
				<li><a class="dropdown-item" href="javascript:void(0)" id="reset-units" onclick="searchOptReset('units-item')">Clear All</a></li>
				<li><a class="dropdown-item" href="javascript:void(0)" id="reset-units" onclick="searchOptPreset('units-item')">Select All</a></li>
			</ul>
		</li>
	</ul>
</div>

<!-- Advanced search toggle -->
<div>
	<a href="javascript:void(0)" style="margin-top:12px; text-decoration:none;" id="advance-mode" onclick="disappear()">Advanced Search</a>
</div>
</form>


<!-- Search result warning -->
<div class="alert alert-danger" role="alert" style="margin-top:20px" hidden>
	0 result returned from search engine. (You may have invalid course id, professor, or keyword input)
	<a href="javascript:void(0)" class="close" data-dismiss="alert" aria-label="close">&times;</a>
</div>



<div style="margin-top:40px;">
	<div class="row">
		{{ range $index, $course := .CourseArray }}
		<div class="col-xl-3 col-lg-4 col-md-6 col-sm-6">
			<a href="/course/{{ $course.CID }}" style="display: block; text-decoration: none;" onclick="modalOpen('course-{{ $index }}');return false">
			<span class="card text-white bg-primary mb-3">
				<div class="card-header" style="font-weight: bold;font-size: 120%;">{{ $course.CID }}: {{ $course.Name }}</div>
				<div class="card-body" style="margin-left:0.75%">
<!--					<h4 class="card-title">{{ $course.CID }}: {{ $course.Name }}</h4> -->
					{{ $maxLength := 200 }}
					{{ $length := len $course.Description }}
					{{ if le $length $maxLength }}
						<span class="card-text">{{ $course.Description }}</span>
					{{ else }}
						<span class="card-text">{{ slice $course.Description 0 $maxLength }}...</span>
					{{ end }}
				</div>
			</span>
			</a>
		</div>
		{{ end }}
	</div>
</div>

<div class="modal" style="display:none;" id="modal">
	<div class="modal-dialog" role="document">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title" id="name"></h5>
				<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" onclick="modalClose()">
					<span aria-hidden="true"></span>
				</button>
			</div>
			<div class="modal-body">
				<div>
					<strong>Unit:</strong>
					<span id="unit"></span>
				</div> 
				<div>
					<strong>Description: </strong>
					<span id="description"></span>
				</div>
			</div>
			<div class="modal-footer">
				<a href="javascript:void(0)" class="btn btn-primary" id="ref">View More</a>
			</div>
		</div>
	</div>
</div>


<!-- Hidden course info -->
<span style="display: none;">
	{{ range $index, $course := .CourseArray }}
	<span id="course-{{ $index }}-elem">
		<span id="course-{{ $index }}-cid">{{ $course.CID }}</span>
		<span id="course-{{ $index }}-name">{{ $course.Name }}</span>
		<span id="course-{{ $index }}-units">{{ $course.Units }}</span>
		<span id="course-{{ $index }}-description">{{ $course.Description }}</span>
	</span>
	{{ end }}
</span>


<script>
var isAdvanced = false;
function disappear(){
	if (isAdvanced) {
    	document.getElementById("advance-element").style.display="none";
		document.getElementById("advance-mode").innerHTML = "Advanced Search"
		document.getElementById("advance-mode").style = "text-decoration:none;";
		isAdvanced = false;
	} else {
    	document.getElementById("advance-element").style.display = "block";
		document.getElementById("advance-mode").innerHTML = "Hide";
		document.getElementById("advance-mode").style = "text-decoration:underline;";
		isAdvanced = true;
  	}
}

function modalClose(){
	document.getElementById("modal").style.display = "none";
}

function modalOpen(str){
	document.getElementById("name").innerHTML = document.getElementById(str + "-cid").innerHTML + ": " + document.getElementById(str + "-name").innerHTML
	document.getElementById("unit").innerHTML = document.getElementById(str + "-units").innerHTML
	document.getElementById("description").innerHTML = document.getElementById(str + "-description").innerHTML
	document.getElementById("ref").href = "/course/" + document.getElementById(str + "-cid").innerHTML
	document.getElementById("modal").style.display = "block";
}

// Close modal at Esc key
document.addEventListener('keydown', (event) => {
	if (event.key === 'Escape') {
		modalClose();
	}
});

var searchOpt = {
	level: new Set(),
	dept: new Set(),
	units: new Set()
};
// Init search options
const levelElemList = document.getElementsByClassName("level-item");
for (let i = 0;i < levelElemList.length; i++) {
	searchOpt.level.add(levelElemList[i].innerHTML)
}
const deptElemList = document.getElementsByClassName("dept-item");
for (let i = 0;i < deptElemList.length; i++) {
	searchOpt.dept.add(deptElemList[i].innerHTML.replace(/&amp;/g, "&"))
}
const unitsElemList = document.getElementsByClassName("units-item")
for (let i = 0;i < unitsElemList.length; i++) {
	searchOpt.units.add(unitsElemList[i].innerHTML)
}

function toggle(id){
	const elem = document.getElementById(id);
	if (elem.classList.contains("active")) {
		searchOptDeactivate(id);
	} else {
		searchOptActivate(id);
	}
}

function searchOptActivate(id) {
	const elem = document.getElementById(id);
	const name = elem.innerHTML;
	if (id.startsWith("level")) searchOpt.level.add(name);
	if (id.startsWith("dept")) searchOpt.dept.add(name);
	if (id.startsWith("units")) searchOpt.units.add(name);
	elem.classList.add("active");
}
function searchOptDeactivate(id) {
	const elem = document.getElementById(id);
	const name = elem.innerHTML;
	if (id.startsWith("level")) searchOpt.level.delete(name);
	if (id.startsWith("dept")) searchOpt.dept.delete(name);
	if (id.startsWith("units")) searchOpt.units.delete(name);
	elem.classList.remove("active");
}
function searchOptPreset(className) {
	const elemList = document.getElementsByClassName(className)
	for (let i = 0;i < elemList.length; i++) {
		searchOptActivate(elemList[i].id);
	}
}
function searchOptReset(className) {
	const elemList = document.getElementsByClassName(className)
	for (let i = 0;i < elemList.length; i++) {
		searchOptDeactivate(elemList[i].id);
	}
}

// Execute search
function doSearch() {
	const queryText = document.getElementById("searchbox").value;

	// Detect if searchbox contains a single course number
	if (!isAdvanced) {
		if (/^[0-9]{5}$/.test(queryText)) {
			window.location.assign("/course/" + queryText);
			return;
		} else if (/^([0-9]{2})\-([0-9]{3})$/.test(queryText)) {
			const courseID = queryText.slice(0, 2) + queryText.slice(3);
			window.location.assign("/course/" + courseID);
			return;
		}
	}

	// Fallback to searching
	searchPath = "/search?exec=true";
	const searchParams = {
		query: queryText,
		is_advanced: false
	};
	if (isAdvanced) {
		searchParams.is_advanced = true;
		Object.entries(searchOpt).forEach(([key, value]) => {
			searchParams[key] = Array.from(value).join(";");
		});
	}

	Object.entries(searchParams).forEach(([key, value]) => {
		searchPath += "&" + key + "=" + encodeURIComponent(value);
	});
	window.location.replace(searchPath);
}
</script>

{{ template "base/footer" . }}

{{ end }}
