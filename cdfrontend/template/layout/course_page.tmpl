{{ define "layout/course_page" }}

{{ template "base/header" . }}

<h2 style="margin-left:7.5px">{{ .Course.CID }}: {{ .Course.Name }}</h2>
<div class="container">
	<div class="row">
		<div class="col-sm"><b>Department: </b>{{ .Course.Dept }}</div>
		<div class="col-sm"><b>Unit: </b>{{ .Course.Units }}</div>
		<div class="col-sm"><b>Course level: </b>{{ .FCE.Level }}</div>
	</div>
	{{ if gt .FCE.Hours 0.0 }}
	<div class="row">
		<div class="col-sm-4"> <b>FCE Hour: </b>{{ .FCE.Hours }}</div>
		<div class="col-sm-4"> <b>FCE Rate: </b>{{ .FCE.CourseRate }}</div>
	</div> 
	{{ end }}
</div>
<br>
<div class="container">
	<h3>Professor</h3>
	{{ range $prof := .ProfArray }}
		<div class="row">
			<div class="col-sm-4">{{ $prof.Name }}</div>
			{{ if gt $prof.RatingOverall 0.0 }}
				<div class="col-sm-4">Rate My Professor: {{ $prof.RatingOverall }}</div>
			{{ end }}
		</div>
	{{ end }}
</div>
<br>
<div class="container">
	<h3>Course Description</h3>
	<div>{{.Course.Description}}</div>
</div>
<div class="container">
	{{ if ne .Course.Prereq "" }}
	<div><b>Pre-requisite: </b>{{.Course.Prereq}}</div>
	{{ end }}
	{{ if ne .Course.Coreq "" }}
	<div><b>Co-requisite: </b>{{.Course.Coreq}}</div>
	{{ end }}
</div>  

<!--Related Pages-->
<h4 style="margin-top: 30px;">Related Pages</h4>

{{ range $index, $page := .PageArray }}
<div style="margin-bottom: 20px;">
	<div>
		<a target="_blank" href="{{ $page.Link }}" style="text-decoration: none;">{{ $page.Title }}</a>
		<small class="text-muted">{{ $page.Link }}</small>
	</div>
	<figure class="bg-active" style="border-left: .30rem solid #720dff;">
		<div style="margin-left: 20px;">
			{{ $maxLength := 500 }}
			{{ $length := len $page.Content }}
			{{ if le $length $maxLength }}
				{{ $page.Content }}
			{{ else }}
				{{ slice $page.Content 0 $maxLength }}<span id="page-{{ $index }}-less">...</span><span id="page-{{ $index }}-more" hidden>{{ slice $page.Content $maxLength }}</span>
				<a href="javascript:void(0)" onclick="pageContentToggle('page-{{ $index }}');" id="page-{{ $index }}-toggle" style="text-decoration: none;">More</a>
			{{ end }}
		</div>
	</figure>
</div>
{{ end }}

<div>
Fill out this <a target="_blank" href="https://forms.gle/bGfK5areKuayaYFS6" style="text-decoration: none;">form</a> to add a website!
</div>


<!--Comment Box-->
<h4 style="margin-top: 60px;">Comments</h4>
<form>
	<fieldset>
		<div class="form-group">
			<!--
			<label for="exampleTextarea" class="form-label mt-4">Comment Board</label>
			-->
			<textarea class="form-control" id="comment-add-text" rows="2" placeholder="Enter comment here"></textarea>
			<div class="form-check">
				<input class="form-check-input" type="checkbox" value="" id="comment-add-is-anon" checked="">
				<label class="form-check-label" for="comment-add-is-anon"> Post anonymously</label>
			</div>
		</div>
		<button type="button" class="btn btn-primary" style="margin-top:10px" id="comment-add-button" onclick="commentAdd()">Send</button>
	</fieldset>
</form>

<div id="comment-list">
{{ range $comment := .CommentArray }}
{{ $commentID := $comment.CommentID }}
<div>
<div class="card border-primary" style="margin-top: 20px">
	<div class="card-body">
		<div class="card-title" style="margin-left:7.5px">
			{{ $comment.Author }}
			<small class="text-muted">({{ $comment.Time }})</small>
			{{ if $comment.Self }}
				<span style="float: right;">
					<a href="javascript:void(0)" onclick="commentEdit({{ $commentID }})" id="comment-{{ $commentID }}-edit"><i class="fa fa-edit"></i></a>
					<a href="javascript:void(0)" onclick="commentDelete({{ $commentID }})" id="comment-{{ $commentID }}-delete"><i class="fa fa-close"></i></a>
				</span>
			{{ end }}
		</div>
		<div class="card-text">
			{{ $comment.Content }}
			<div style="margin-top: 6px;">
				{{ $likeIcon := "fa-thumbs-o-up" }}
				{{ $likeRespond := true }}
				{{ if $comment.SelfResponse }}
				{{ $likeIcon = "fa-thumbs-up" }}
				{{ $likeRespond = false }}
				{{ end }}
				<a href="javascript:void(0)" onclick="commentRespond({{ $commentID }}, {{ $likeRespond }})" id="comment-{{ $commentID }}-respond"><i class="fa {{ $likeIcon }}"></i></a>
				&nbsp;
				{{ $comment.Score }}
			</div>
		</div>
	</div>
</div>

{{ range $reply := $comment.Replies }}
<div class="card border-secondary" style="margin-top:5px; margin-left: 30px;">
	<div class="card-body">
		<div class="card-title" style="margin-left:7.5px">
			{{ $reply.Author }}
			<small class="text-muted">({{ $reply.Time }})</small>
			{{ if $reply.Self }}
				<span style="float: right;">
					<a href="javascript:void(0)"><i class="fa fa-edit"></i></a>
					<a href="javascript:void(0)"><i class="fa fa-close"></i></a>
				</span>
			{{ end }}
		</div>
		<div class="card-text">
			{{ $reply.Content }}
		</div>
	</div>
</div>
{{ end }}

{{ end }}
</div>

</div>


<!--Tags-->
<h4 style="margin-top: 60px;">Tags</h4>
<div class="container">
	<div class="d-flex justify-content-start">
		<span id="tag-list">
		{{ range $tag := .TagArray }}
			<a href="/search?exec=true&is_advanced=false&query={{ $tag.Content }}" class="btn btn-outline-success m-1">{{ $tag.Content }}</a>
		{{ end }}
		<button class="btn btn-outline-success m-1" onclick="tagAdd()" id="tag-start"> &nbsp;+&nbsp; </button>
		</span>
	</div>
</div>

<div class="container" style="margin-top: 10px; display: none;" id="tag-input">
	<h5>Add a tag</h5>
	<div style="margin-top: 8px;">
		<span id="tag-input-staging" style="display: block;">
			<div class="row">
				<div class="col-lg-4">
					<input class="form-control" placeholder="Tag name" id="tag-name">
				</div>
			</div>
			<button class="btn btn-primary" style="margin-top: 8px;" onclick="tagAdd1()">Add</button>
		</span>
		<span id="tag-input-final" style="display: none;">
			<div>
				<strong> Warning: </strong> This operation cannot be undone. Please confirm if the tag name is correct.
				<br>
				However, you can still send us an email if there is a error in tag name to fix it.
			</div>
			<button class="btn btn-danger" style="margin-top: 8px;" id="tag-confirm" onclick="tagAddConfirm()">Confirm</button>
			<button class="btn btn-secondary" style="margin-top: 8px;" id="tag-cancel" onclick="tagAddCancel()">Cancel</button>
		</span>
	</div>
</div>

<script>
document.getElementById("comment-add-text").addEventListener("keydown", (event) => {
	if (event.keyCode == 13 && event.ctrlKey) {
		document.getElementById("comment-add-button").click();
	}
})
function commentAdd() {
	document.getElementById("comment-add-button").classList.add("disabled");
	const commentContent = document.getElementById("comment-add-text").value;
	const commentIsAnon = document.getElementById("comment-add-is-anon").checked;

	// Submit commentContent PUT request
	fetch("/comment", {
		method: "PUT",
		body: JSON.stringify({
			"CID":  "{{ .Course.CID }}",
			"Content": commentContent,
			"Anonymous": commentIsAnon
		})
	}).then((response) => {
		return response.json();
	}).then((data) => {
		if (data.Status != "OK") {
			throw new Error(data.Error);
		}
		// Reload window
		window.location.reload();
	}).catch((error) => {
		alert(error);
	})
}
function commentRespond(commentID, nextResponse) {
	document.getElementById("comment-" + commentID + "-respond").style.pointerEvents = "none";

	// Submit commentContent PUT request
	fetch("/comment/" + commentID + "/respond", {
		method: "POST",
		body:JSON.stringify({
			"Like": nextResponse
		})
	}).then((response) => {
		return response.json();
	}).then((data) => {
		if (data.Status != "OK") {
			throw new Error(data.Error);
		}
		// Reload window
		window.location.reload();
	}).catch((error) => {
		alert(error);
	})
}
function commentDelete(commentID) {
	document.getElementById("comment-" + commentID + "-delete").style.pointerEvents = "none";

	// Submit commentContent PUT request
	fetch("/comment/" + commentID, {
		method: "DELETE",
		body:JSON.stringify({})
	}).then((response) => {
		return response.json();
	}).then((data) => {
		if (data.Status != "OK") {
			throw new Error(data.Error);
		}
		// Reload window
		window.location.reload();
	}).catch((error) => {
		alert(error);
	})
}
function commentEdit(commentID) {
	document.getElementById("comment-" + commentID + "-edit").style.pointerEvents = "none";
	alert("test")
}
/*
	const commentContent = document.getElementById("comment-add-text").value;
	const commentIsAnon = document.getElementById("comment-add-is-anon").checked;

	// Submit commentContent PUT request
	fetch("/comment", {
		"method": "PUT",
		body: JSON.stringify({
			"CID":  "{{ .Course.CID }}",
			"Content": commentContent,
			"Anonymous": commentIsAnon
		})
	}).then((response) => {
		return response.json();
	}).then((data) => {
		if (data.Status != "OK") {
			throw new Error(data.Error);
		}
		// Reload window
		window.location.reload();
	}).catch((error) => {
		alert(error);
	})
}
*/
</script>

<script>
function pageContentToggle(name) {
	elemLess = document.getElementById(name + "-less");
	elemMore = document.getElementById(name + "-more");
	elemToggle = document.getElementById(name + "-toggle");
	elemLess.hidden = !elemLess.hidden;
	elemMore.hidden = !elemMore.hidden;
	elemToggle.innerHTML = elemToggle.innerHTML == "More" ? "Less" : "More";
}

function tagAdd() {
	document.getElementById("tag-start").classList.add("disabled");
	document.getElementById("tag-input").style.display = "block";
}
function tagAdd1() {
	const tagName = document.getElementById("tag-name").value;
	if (tagName == "") {
		alert("Tag name cannot be empty");
		return;
	}
	document.getElementById("tag-input-staging").style.display = "none";
	document.getElementById("tag-input-final").style.display = "block";
	document.getElementById("tag-confirm").innerHTML = "Confirm \"" + tagName + "\"";
}
function tagAddCancel() {
	document.getElementById("tag-input-staging").style.display = "block";
	document.getElementById("tag-input-final").style.display = "none";
}
function tagAddConfirm() {
	document.getElementById("tag-confirm").classList.add("disabled");
	document.getElementById("tag-cancel").classList.add("disabled");

	let tagName = document.getElementById("tag-name").value;

	// Do PUT request
	fetch("/tag", {
		method: "PUT",
		body: JSON.stringify({
			"CID": "{{ .Course.CID }}",
			"Content": tagName
		})
	}).then((response) => {
		return response.json();
	}).then((data) => {
		if (data.Status != "OK") {
			throw new Error(data.Error);
		}
		// Insert new tag
		window.location.reload();
	}).catch((error) => {
		alert(error);
	})
}
</script>

{{ template "base/footer" . }}

{{ end }}
